{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeContent.js","components/Home.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/auth/Patient.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","localStorage","clear","error","console","log","message","stop","react_default","createElement","className","role","aria-label","href","src","width","height","alt","id","this","isAuthenticated","user","username","onClick","Component","Hero","HomeContent","Home","react","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","state","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","setState","handleSubmit","err","Validate","Object","objectSpread","signIn","sent","history","push","t0","onInputChange","defineProperty","target","value","components_FormErrors","onSubmit","type","aria-describedby","placeholder","onChange","Register","_this$state","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","Patient","divempty","myth","border","padding","paddingtop","paddingbottom","textalign","backgroundColor","color","style","align","fontfamily","bordercollapse","name","title","Footer","position","left","bottom","library","faEdit","App","isAuthenticating","authenticated","currentSession","session","authProps","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","render","assign","auth_LogIn","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","Patient_Patient","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3f90c55.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Auth } from 'aws-amplify';\r\n\r\nexport default class Navbar extends Component {\r\n  handleLogOut = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      Auth.signOut();\r\n      this.props.auth.setAuthStatus(false);\r\n      this.props.auth.setUser(null);\r\n      localStorage.clear()\r\n    }catch(error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"/\">\r\n            <img src=\"hexal-logo.png\" width=\"150\" height=\"150\" alt=\"hexal logo\" />\r\n          </a>\r\n        </div>\r\n\r\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n            <a href=\"/\" className=\"navbar-item\">\r\n              Home\r\n            </a>\r\n            {/* <a href=\"/products\" className=\"navbar-item\">\r\n              Products\r\n            </a>\r\n            <a href=\"/admin\" className=\"navbar-item\">\r\n              Admin\r\n            </a> */}\r\n            {this.props.auth.isAuthenticated && (\r\n                  <a href=\"/patient\" className=\"navbar-item\">\r\n                    Patient\r\n                  </a>\r\n                )}\r\n          </div>\r\n\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\r\n                <p>\r\n                  Hello {this.props.auth.user.username}\r\n                </p>\r\n              )}\r\n              <div className=\"buttons\">\r\n                {!this.props.auth.isAuthenticated && (\r\n                  <div>\r\n                    <a href=\"/register\" className=\"button is-primary\">\r\n                      <strong>Register</strong>\r\n                    </a>\r\n                    <a href=\"/login\" className=\"button is-light\">\r\n                      Log in\r\n                    </a>\r\n                  </div>\r\n                )}\r\n                {this.props.auth.isAuthenticated && (\r\n                  <a href=\"/\" onClick={this.handleLogOut} className=\"button is-light\">\r\n                    Log out\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Hero() {\r\n  return (\r\n    <section className=\"hero is-primary\">\r\n      <div className=\"hero-body\">\r\n        <div>\r\n          <img src=\"mcharts.png\" alt=\"conserve energy\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HomeContent() {\r\n  return (\r\n    <section className=\"container\">\r\n        <div className=\"columns features\">\r\n            <div className=\"column is-4\">\r\n                <div className=\"card is-shady\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"content\">\r\n                            <p>“This is awesome for serial movers like us! It's always such a headache to gather all these documents from different drs before a move!” -Courtney M.</p>\r\n                            <p><a href=\"/\">Learn more</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"column is-4\">\r\n                <div className=\"card is-shady\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"content\">\r\n                            <p>“Being able to see all of your records in one place with easy access will make life easier for the patients as well as the doctors and it is just so convenient.”  -Julia C. </p>\r\n                            <p><a href=\"/\">Learn more</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"column is-4\">\r\n                <div className=\"card is-shady\">\r\n                     <div className=\"card-content\">\r\n                        <div className=\"content\">\r\n                            <p>“$5 is comparable to a Pandora account subscription. Seems well worth the value as it is more than just access to music but will help you manage your health.” -Kelsy S. </p>\r\n                            <p><a href=\"/\">Learn more</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport Hero from './Hero';\r\nimport HomeContent from './HomeContent';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Fragment>\r\n      <Hero />\r\n      <div className=\"box cta\">\r\n        <p className=\"has-text-centered\">\r\n        <h1>What our customers have to say</h1>\r\n        </p>\r\n      </div>\r\n      <HomeContent />\r\n    </Fragment>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction FormErrors(props) {\r\n  if (\r\n    props.formerrors &&\r\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\r\n  ) {\r\n    return (\r\n      <div className=\"error container help is-danger\">\r\n        <div className=\"row justify-content-center\">\r\n          {props.formerrors.passwordmatch\r\n            ? \"Password value does not match confirm password value\"\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"row justify-content-center help is-danger\">\r\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.apierrors) {\r\n    return (\r\n      <div className=\"error container help is-danger\">\r\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\r\n      </div>\r\n    );\r\n  } else if (props.formerrors && props.formerrors.cognito) {\r\n    return (\r\n      <div className=\"error container help is-danger\">\r\n        <div className=\"row justify-content-center\">\r\n          {props.formerrors.cognito.message}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default FormErrors;","function validateForm(event, state) {\r\n  // clear all error messages\r\n  const inputs = document.getElementsByClassName(\"is-danger\");\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    if (!inputs[i].classList.contains(\"error\")) {\r\n      inputs[i].classList.remove(\"is-danger\");\r\n    }\r\n  }\r\n\r\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\r\n    document.getElementById(\"username\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\r\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\r\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\r\n    document.getElementById(\"email\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (\r\n    state.hasOwnProperty(\"verificationcode\") &&\r\n    state.verificationcode === \"\"\r\n  ) {\r\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\r\n    document.getElementById(\"password\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\r\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\r\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\r\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n    return { blankfield: true };\r\n  }\r\n  if (\r\n    state.hasOwnProperty(\"password\") &&\r\n    state.hasOwnProperty(\"confirmpassword\") &&\r\n    state.password !== state.confirmpassword\r\n  ) {\r\n    document.getElementById(\"password\").classList.add(\"is-danger\");\r\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n    return { passwordmatch: true };\r\n  }\r\n  if (\r\n    state.hasOwnProperty(\"newpassword\") &&\r\n    state.hasOwnProperty(\"confirmpassword\") &&\r\n    state.newpassword !== state.confirmpassword\r\n  ) {\r\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\r\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n    return { passwordmatch: true };\r\n  }\r\n  return;\r\n}\r\n\r\nexport default validateForm;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false\r\n    }\r\n  };\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      const user = await Auth.signIn(this.state.username, this.state.password);\r\n      console.log(user);\r\n      this.props.auth.setAuthStatus(true);\r\n      this.props.auth.setUser(user);\r\n      this.props.history.push(\"/patient\");\r\n    }catch(error) {\r\n      let err = null;\r\n      !error.message ? err = { \"message\": error } : err = error;\r\n      this.setState({\r\n        errors: {\r\n          ...this.state.errors,\r\n          cognito: err\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Log in</h1>\r\n          <FormErrors formerrors={this.state.errors} />\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  aria-describedby=\"usernameHelp\"\r\n                  placeholder=\"Enter username or email\"\r\n                  value={this.state.username}\r\n                  onChange={this.onInputChange}\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <a href=\"/forgotpassword\">Forgot password?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button className=\"button is-success\">\r\n                  Login\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false,\r\n      passwordmatch: false\r\n    }\r\n  }\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false,\r\n        passwordmatch: false\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    const { username, email, password } = this.state;\r\n    try {\r\n      const signUpResponse = await Auth.signUp({\r\n        username,\r\n        password,\r\n        attributes: {\r\n          email: email\r\n        }\r\n      });\r\n      this.props.history.push(\"/welcome\");\r\n      console.log(signUpResponse);\r\n    } catch (error) {\r\n      let err = null;\r\n      !error.message ? err = { \"message\": error } : err = error;\r\n      this.setState({\r\n        errors: {\r\n          ...this.state.errors,\r\n          cognito: err\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Register</h1>\r\n          <FormErrors formerrors={this.state.errors} />\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  aria-describedby=\"userNameHelp\"\r\n                  placeholder=\"Enter username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onInputChange}\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left has-icons-right\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-envelope\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"password\"\r\n                  id=\"confirmpassword\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={this.state.confirmpassword}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <a href=\"/forgotpassword\">Forgot password?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button className=\"button is-success\">\r\n                  Register\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from 'aws-amplify';\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    email: \"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false\r\n    }\r\n  }\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false\r\n      }\r\n    });\r\n  }\r\n\r\n  forgotPasswordHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      await Auth.forgotPassword(this.state.email);\r\n      this.props.history.push('/forgotpasswordverification');\r\n    }catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Forgot your password?</h1>\r\n          <p>\r\n            Please enter the email address associated with your account and we'll\r\n            email you a password reset link.\r\n          </p>\r\n          <FormErrors formerrors={this.state.errors} />\r\n\r\n          <form onSubmit={this.forgotPasswordHandler}>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left has-icons-right\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"input\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-envelope\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <a href=\"/forgotpassword\">Forgot password?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button className=\"button is-success\">\r\n                  Submit\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from 'aws-amplify';\r\n\r\nclass ForgotPasswordVerification extends Component {\r\n  state = {\r\n    verificationcode: \"\",\r\n    email: \"\",\r\n    newpassword: \"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false\r\n    }\r\n  };\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false\r\n      }\r\n    });\r\n  };\r\n\r\n  passwordVerificationHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      await Auth.forgotPasswordSubmit(\r\n        this.state.email,\r\n        this.state.verificationcode,\r\n        this.state.newpassword\r\n      );\r\n      this.props.history.push(\"/changepasswordconfirmation\");\r\n    }catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Set new password</h1>\r\n          <p>\r\n            Please enter the verification code sent to your email address below,\r\n            your email address and a new password.\r\n          </p>\r\n          <FormErrors formerrors={this.state.errors} />\r\n\r\n          <form onSubmit={this.passwordVerificationHandler}>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"verificationcode\"\r\n                  aria-describedby=\"verificationCodeHelp\"\r\n                  placeholder=\"Enter verification code\"\r\n                  value={this.state.verificationcode}\r\n                  onChange={this.onInputChange}\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-envelope\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"input\"\r\n                  id=\"newpassword\"\r\n                  placeholder=\"New password\"\r\n                  value={this.state.newpassword}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button className=\"button is-success\">\r\n                  Submit\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from 'aws-amplify';\r\n\r\nclass ChangePassword extends Component {\r\n  state = {\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false,\r\n      passwordmatch: false\r\n    }\r\n  }\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false,\r\n        passwordmatch: false\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      const user = await Auth.currentAuthenticatedUser();\r\n      console.log(user);\r\n      await Auth.changePassword(\r\n        user,\r\n        this.state.oldpassword,\r\n        this.state.newpassword\r\n      );\r\n      this.props.history.push(\"/changepasswordconfirmation\");\r\n    } catch (error) {\r\n      let err = null;\r\n      !error.message ? err = { \"message\": error } : err = error;\r\n      this.setState({\r\n        errors: { ...this.state.errors, cognito: err }\r\n      });\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Change Password</h1>\r\n          <FormErrors formerrors={this.state.errors} />\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input \r\n                  className=\"input\" \r\n                  type=\"password\"\r\n                  id=\"oldpassword\"\r\n                  placeholder=\"Old password\"\r\n                  value={this.state.oldpassword}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  id=\"newpassword\"\r\n                  placeholder=\"New password\"\r\n                  value={this.state.newpassword}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  id=\"confirmpassword\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={this.state.confirmpassword}\r\n                  onChange={this.onInputChange}\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <a href=\"/forgotpassword\">Forgot password?</a>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <button className=\"button is-success\">\r\n                  Change password\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;","import React, { Component } from \"react\";\r\n\r\nclass ChangePasswordConfirmation extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"section auth\">\r\n        <div className=\"container\">\r\n          <h1>Change Password</h1>\r\n          <p>Your password has been successfully updated!</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePasswordConfirmation;","import React from 'react';\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <section className=\"section auth\">\r\n      <div className=\"container\">\r\n        <h1>Welcome to Mcharts!</h1>\r\n        <p>You have successfully registered a new account.</p>\r\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Auth } from 'aws-amplify';\r\n\r\nexport default class Patient extends Component\r\n{\r\n\r\n\r\nrender(){\r\n    const mytable = {\r\n        color: \"Black\",\r\n        //backgroundColor: \"DodgerBlue\",\r\n        padding: \"30px\",\r\n        fontfamily: \"Arial, Helvetica, sans-serif\",\r\n        bordercollapse: \"collapse\",\r\n        width: \"80%\",\r\n        align:\"center\"\r\n      };\r\n      \r\n      const divalign = {\r\n        align:\"center\",\r\n        border:\"1px\",\r\n        height:\"1000px\"\r\n     \r\n      }\r\n\r\n      const iframecss = {\r\n        align:\"center\",\r\n        border:\"1px\",\r\n        height:\"100%\",\r\n        width:\"100%\"\r\n     \r\n      }\r\n\r\n      const divempty = {\r\n        height:\"5px\",\r\n      }\r\n\r\n      const myth = {\r\n        border: \"1px solid #ddd\",\r\n        padding: \"10px\",\r\n        paddingtop: \"12px\",\r\n        paddingbottom: \"12px\",\r\n        textalign: \"left\",\r\n        backgroundColor: \"#04AA6D\",\r\n        color: \"white\"\r\n      }\r\n      \r\n     \r\n      \r\n  return (\r\n\r\n    <div style={divalign}>\r\n        <div style={divempty}></div>\r\n                {!this.props.auth.isAuthenticated && (\r\n                  this.props.history.push(\"/login\")\r\n                )}\r\n                {this.props.auth.isAuthenticated && (\r\n                  <table align=\"center\" style={mytable}>\r\n                  <tbody>\r\n                    <tr style={myth}>\r\n                      <th style={myth}>First Name</th>\r\n                      <th style={myth}>Last Name</th>\r\n                      <th style={myth}>Age</th>\r\n                      <th style={myth}>City</th>\r\n                      <th style={myth}>State</th>\r\n                      <th style={myth}>Email</th>\r\n                      <th style={myth}>View</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Donna</td>\r\n                      <td>Peters</td>\r\n                      <td>44</td>\r\n                      <td>Denver</td>\r\n                      <td>CO</td>\r\n                      <td>dpeters121@gmail.com</td>\r\n                      <td><a href=\"https://collabcare.s3.us-west-2.amazonaws.com/test/CollabCare1.html\" target=\"bottom\">View</a></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Chrissy</td>\r\n                      <td>Bright</td>\r\n                      <td>49</td>\r\n                      <td>Monument</td>\r\n                      <td>CO</td>\r\n                      <td>chrissybright@gmail.com</td>\r\n                      <td><a href=\"https://collabcare.s3.us-west-2.amazonaws.com/test/CollabCare1.html\" target=\"bottom\">View</a></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rebecca</td>\r\n                      <td>Halling</td>\r\n                      <td>50</td>\r\n                      <td>Boulder</td>\r\n                      <td>CO</td>\r\n                      <td>rebhalling@gmail.com</td>\r\n                      <td><a href=\"https://collabcare.s3.us-west-2.amazonaws.com/test/CollabCare1.html\" target=\"bottom\">View</a></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                )}\r\n                <div style={divempty}></div>\r\n                <iframe src=\"\" style={iframecss} name=\"bottom\" title=\"test\"></iframe>\r\n              </div>\r\n\r\n  )\r\n}\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <div  style={{position: \"fixed\", left: \"0\", padding:\"10px\", bottom: \"0\",  height: \"50px\",width: \"100%\",  backgroundColor: \"red\",  color: \"white\"}}>\r\n        <div>\r\n           <center>Mcharts testing</center>\r\n           </div>\r\n        </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Home';\r\nimport LogIn from './components/auth/LogIn';\r\nimport Register from './components/auth/Register';\r\nimport ForgotPassword from './components/auth/ForgotPassword';\r\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\r\nimport ChangePassword from './components/auth/ChangePassword';\r\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\r\nimport Welcome from './components/auth/Welcome';\r\nimport Patient from './components/auth/Patient';\r\nimport Footer from './components/Footer';\r\nimport { Auth } from 'aws-amplify';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faEdit);\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isAuthenticated: false,\r\n    isAuthenticating: true,\r\n    user: null\r\n  }\r\n\r\n  setAuthStatus = authenticated => {\r\n    this.setState({ isAuthenticated: authenticated });\r\n  }\r\n\r\n  setUser = user => {\r\n    this.setState({ user: user });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const session = await Auth.currentSession();\r\n      this.setAuthStatus(true);\r\n      console.log(session);\r\n      const user = await Auth.currentAuthenticatedUser();\r\n      this.setUser(user);\r\n    } catch(error) {\r\n      if (error !== 'No current user') {\r\n        console.log(error);\r\n      }\r\n    }\r\n  \r\n    this.setState({ isAuthenticating: false });\r\n  }\r\n\r\n  render() {\r\n    const authProps = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      user: this.state.user,\r\n      setAuthStatus: this.setAuthStatus,\r\n      setUser: this.setUser\r\n    }\r\n    return (\r\n      !this.state.isAuthenticating &&\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div>\r\n            <Navbar auth={authProps} />\r\n            <hr/>\r\n            <Switch>\r\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\r\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\r\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\r\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\r\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\r\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\r\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\r\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\r\n              <Route exact path=\"/patient\" render={(props) => <Patient {...props} auth={authProps} />} />\r\n            </Switch>\r\n            <Footer />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Amplify from \"aws-amplify\";\r\nimport config from \"./config\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n  }\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}